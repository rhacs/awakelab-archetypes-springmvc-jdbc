status = error
dest = err
name = PropertiesConfig

property.ruta = /io.github.rhacs-logs/test
property.patron = [%highlight{%-5level}] %d{DEFAULT} %c{1}.%M() - %msg%n%throwable{short.lineNumber}

appender.console.type = Console
appender.console.name = Consola
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${patron}
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = error

appender.rapp.type = RollingFile
appender.rapp.name = AppLog
appender.rapp.fileName = ${ruta}/aplicacion.log
appender.rapp.filePattern = ${ruta}/aplicacion_%d{yyyy-MM-dd}.log
appender.rapp.layout.type = PatternLayout
appender.rapp.layout.pattern = ${patron}
appender.rapp.policies.type = Policies
appender.rapp.policies.time.type = TimeBasedTriggeringPolicy
appender.rapp.policies.time.interval = 1
appender.rapp.policies.time.modulate = true
appender.rapp.policies.size.type = SizeBasedTriggeringPolicy
appender.rapp.policies.size.size = 10MB
appender.rapp.strategy.type = DefaultRolloverStrategy
appender.rapp.strategy.max = 20

appender.rframework.type = RollingFile
appender.rframework.name = FrameworkLog
appender.rframework.fileName = ${ruta}/framework.log
appender.rframework.filePattern = ${ruta}/framework_%d{yyyy-MM-dd}.log
appender.rframework.layout.type = PatternLayout
appender.rframework.layout.pattern = ${patron}
appender.rframework.policies.type = Policies
appender.rframework.policies.time.type = TimeBasedTriggeringPolicy
appender.rframework.policies.time.interval = 1
appender.rframework.policies.time.modulate = true
appender.rframework.policies.size.type = SizeBasedTriggeringPolicy
appender.rframework.policies.size.size = 10MB
appender.rframework.strategy.type = DefaultRolloverStrategy
appender.rframework.strategy.max = 20

logger.lapp.name = io.github.rhacs.test
logger.lapp.level = debug
logger.lapp.additivity = false
logger.lapp.appenderRef.rolling.ref = AppLog
logger.lapp.appenderRef.stdout.ref = Consola

logger.lframework.name = org.springframework
logger.lframework.level = error
logger.lframework.additivity = false
logger.lframework.appenderRef.rolling.ref = FrameworkLog
logger.lframework.appenderRef.stdout.ref = Consola

rootLogger.level = error
rootLogger.additivity = false
rootLogger.appenderRef.stdout.ref = Consola
rootLogger.appenderRef.rolling.ref = AppLog
